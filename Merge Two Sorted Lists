/*Objective: Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.*/

/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var mergeTwoLists = function(l1, l2) {
    if(l1&&l2){
        var output = new ListNode()
        while(l1&&l2) {
            if(l1.val<l2.val){
              var value = l1.val
              l1=l1.next
            }else{
              var value = l2.val
              l2=l2.next
            }
            output = add(value,output)
        }
        if(l1){
            while(l1){
                output = add(l1.val,output)
                l1=l1.next
            }
        }else{
            while(l2){
                output = add(l2.val,output)
                l2=l2.next
            }
        }
        output=output.next
    }else if(l1){
        var output = l1
    }else{
        var output = l2
    }
    
    return output
};
function add(value,listnode){
  var current = listnode
  while(current){
      if(!current.next){
        current.next = new ListNode(value)
        break
      }
      current=current.next
  }
    return listnode
}
